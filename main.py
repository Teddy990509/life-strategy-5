def on_countdown_end():
    game.set_game_over_message(True, "Life is over!")
    game.game_over(True)
info.on_countdown_end(on_countdown_end)

def on_on_overlap(sprite, otherSprite):
    global lossblood
    lossblood = randint(0, -10)
    info.change_countdown_by(lossblood)
    scene.camera_shake(4, 500)
    otherSprite.destroy(effects.bubbles)
    sprite.say_text("隨機" + ("" + str(lossblood)) + "時間!", 500, True)
sprites.on_overlap(SpriteKind.player, SpriteKind.projectile, on_on_overlap)

def on_on_overlap2(sprite2, otherSprite2):
    global addscore
    addscore = randint(abili * -3, abili * 10)
    info.change_score_by(addscore)
    otherSprite2.destroy()
    sprite2.start_effect(effects.hearts, 100)
    sprite2.say_text("分數變化" + ("" + str(addscore)) + "分!", 500, True)
    music.ba_ding.play()
sprites.on_overlap(SpriteKind.player, SpriteKind.food, on_on_overlap2)

projectile: Sprite = None
addscore = 0
lossblood = 0
abili = 0
scene.set_background_color(13)
mySprite = sprites.create(img("""
        . . . . . . f f f f . . . . . . 
            . . . . f f f 2 2 f f f . . . . 
            . . . f f f 2 2 2 2 f f f . . . 
            . . f f f e e e e e e f f f . . 
            . . f f e 2 2 2 2 2 2 e e f . . 
            . . f e 2 f f f f f f 2 e f . . 
            . . f f f f e e e e f f f f . . 
            . f f e f b f 4 4 f b f e f f . 
            . f e e 4 1 f d d f 1 4 e e f . 
            . . f e e d d d d d d e e f . . 
            . . . f e e 4 4 4 4 e e f . . . 
            . . e 4 f 2 2 2 2 2 2 f 4 e . . 
            . . 4 d f 2 2 2 2 2 2 f d 4 . . 
            . . 4 4 f 4 4 5 5 4 4 f 4 4 . . 
            . . . . . f f f f f f . . . . . 
            . . . . . f f . . f f . . . . .
    """),
    SpriteKind.player)
controller.move_sprite(mySprite, 100, 100)
mySprite.set_stay_in_screen(True)
while True:
    abili = game.ask_for_number("Please set your ability level from 1 to 10")
    if -1 >= abili or abili > 10:
        game.splash("HAHA! your number is not available!")
        info.set_life(3)
        continue
    else:
        break
info.start_countdown(randint(20, 40))

def on_update_interval():
    global projectile
    projectile = sprites.create_projectile_from_side(img("""
            ....................
                    ....................
                    ....................
                    ....................
                    ....................
                    ....................
                    .....2d22222222.....
                    .....2222222222.....
                    ......eeeeeeee......
                    ......22222222......
                    .....22d2222222.....
                    .....2d22222222.....
                    .....2d22222222.....
                    .....2222222222.....
                    .....2222222222.....
                    .....222222222e.....
                    .....222222222e.....
                    ......2eeeeeee......
                    ....................
                    ....................
        """),
        -150,
        0)
    projectile.y = randint(10, 110)
game.on_update_interval(2000, on_update_interval)

def on_update_interval2():
    global projectile
    projectile = sprites.create_projectile_from_side(img("""
            ....................
                    ....................
                    ....................
                    ....................
                    ....................
                    ....................
                    .....7977777777.....
                    .....7777777777.....
                    ......66666666......
                    ......77777777......
                    .....7797777777.....
                    .....7977777777.....
                    .....7977777777.....
                    .....7777777777.....
                    .....7777777777.....
                    .....7777777776.....
                    .....7777777776.....
                    ......76666666......
                    ....................
                    ....................
        """),
        40,
        0)
    projectile.y = randint(10, 110)
    projectile.set_kind(SpriteKind.food)
game.on_update_interval(500, on_update_interval2)
